{"version":3,"sources":["components/Navbar.js","components/FilterBox.js","components/ImageTable.js","components/Pagination.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","_this","this","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","react_router_dom","name","to","onClick","event","props","onLink","react_router","exact","path","Component","FilterBox","checked","filters","sports","onChange","onBox","nature","cars","ImageTable","imageArray","imageData","map","oneImage","index","key","src","pictureUrl","alt","category","Pagination","pageFloor","Math","floor","length","itemStart","i","push","itemEnd","oneIndex","paginationButtons","oneButton","products","App","state","sourceData","pageStart","pageLast","currentPage","slice","categories","_this2","_event$target","target","updatedFilter","setState","Object","assign","defineProperty","keys","filter","String","selection","oneContact","includes","page","_this3","forEach","pageStartIndex","pageLastIndex","_this4","src_components_Navbar","genericSwitch","src_components_FilterBox","genericOnChange","src_components_ImageTable","src_components_Pagination","genericImageSelector","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f7e5e58.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink, Switch, Route } from \"react-router-dom\";\nimport \"./Navbar.css\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <a className=\"navbar-brand\" href=\"/\">\n            ImageDigger\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              {/* <li className=\"nav-item active\">\n                <NavLink className=\"nav-link\" exact to=\"/\">\n                  Home <span className=\"sr-only\">(current)</span>\n                </NavLink>\n              </li> */}\n              <li className=\"nav-item\">\n                <NavLink\n                  className=\"nav-link\"\n                  name=\"sports\"\n                  to=\"/sports\"\n                  onClick={event => this.props.onLink(event)}\n                >\n                  Sports\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink\n                  className=\"nav-link\"\n                  name=\"nature\"\n                  to=\"/nature\"\n                  onClick={event => this.props.onLink(event)}\n                >\n                  Nature\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink\n                  className=\"nav-link\"\n                  name=\"cars\"\n                  to=\"/cars\"\n                  onClick={event => this.props.onLink(event)}\n                >\n                  Cars\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n          <div>\n            <p className=\"slogan\">The greatest image DataBase !</p>\n          </div>\n        </nav>\n        <Switch>\n          <Route exact path=\"/\" />\n          <Route path=\"/sports\" />\n          <Route path=\"/nature\" />\n          <Route path=\"/cars\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\n\nimport \"./FilterBox.css\";\n\nclass FilterBox extends Component {\n  render() {\n    return (\n      <section className=\"filter-nav\">\n        <h2 className=\"title\">Feel free to browse ImageDigger !</h2>\n        <form className=\"form-block\">\n          <li className=\"list-group-item\">\n            <span className=\"filter-descr\">Sports</span>\n            <label className=\"switch \">\n              <input\n                type=\"checkbox\"\n                className=\"primary\"\n                checked={this.props.filters.sports}\n                onChange={event => this.props.onBox(event)}\n                name=\"sports\"\n              />\n              <span className=\"slider round\" />\n            </label>\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"filter-descr\">Nature</span>\n            <label className=\"switch \">\n              <input\n                type=\"checkbox\"\n                className=\"primary\"\n                checked={this.props.filters.nature}\n                onChange={event => this.props.onBox(event)}\n                name=\"nature\"\n              />\n              <span className=\"slider round\" />\n            </label>\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"filter-descr\">Cars</span>\n            <label className=\"switch \">\n              <input\n                type=\"checkbox\"\n                className=\"primary\"\n                checked={this.props.filters.cars}\n                onChange={event => this.props.onBox(event)}\n                name=\"cars\"\n              />\n              <span className=\"slider round\" />\n            </label>\n          </li>\n\n          {/* <label className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              checked={this.props.filters.sports}\n              onChange={event => this.props.onBox(event)}\n              name=\"sports\"\n            />\n            <p className=\"category\">Sports</p>\n          </label>\n          <label className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              checked={this.props.filters.nature}\n              onChange={event => this.props.onBox(event)}\n              name=\"nature\"\n            />\n            <p className=\"category\">Nature</p>\n          </label>\n          <label className=\"checkbox\">\n            <input\n              type=\"checkbox\"\n              checked={this.props.filters.cars}\n              onChange={event => this.props.onBox(event)}\n              name=\"cars\"\n            />\n            <p className=\"category\">Cars</p>\n          </label> */}\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default FilterBox;\n","import React, { Component } from \"react\";\nimport \"./ImageTable.css\";\n\nclass ImageTable extends Component {\n  render() {\n    const imageArray = this.props.imageData;\n\n    return (\n      <section className=\"articles-table-page\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            {imageArray.map((oneImage, index) => {\n              return (\n                <div className=\"col-4 p-0\" key={index}>\n                  <div>\n                    <img src={oneImage.pictureUrl} alt=\"Some Pic\" />\n                  </div>\n                  <div className=\"image-infos\">\n                    <h3 className=\"image-name\">{oneImage.name}</h3>\n                    <p className=\"description\">Category: {oneImage.category}</p>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ImageTable;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Pagination.css\";\n\nclass Pagination extends Component {\n  render() {\n    const imageArray = this.props.imageData;\n    var pageFloor = Math.floor(imageArray.length / 9);\n    var itemStart = [];\n    for (var i = 1; i < pageFloor; i++) {\n      itemStart.push(i * 9);\n    }\n    const itemEnd = itemStart.map(oneIndex => {\n      return oneIndex + 9;\n    });\n    if (imageArray.length / 9 !== 0) {\n      itemStart.push(pageFloor * 9);\n      itemEnd.push(pageFloor * 9 + (imageArray.length % 9));\n    }\n    var paginationButtons = [];\n    for (i = 1; i <= itemStart.length; i++) {\n      paginationButtons.push(i);\n    }\n\n    return (\n      <div>\n        <nav aria-label=\"Page navigation example\">\n          <ul className=\"pagination justify-content-center\">\n            {paginationButtons.map((oneButton, index) => {\n              return (\n                <li className=\"page-item\" key={index}>\n                  <Link\n                    className=\"page-link\"\n                    to=\"#\"\n                    onClick={event =>\n                      this.props.products(\n                        event,\n                        itemStart[index],\n                        itemEnd[index]\n                      )\n                    }\n                  >\n                    {oneButton}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Pagination;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport sourceData from \"./data.json\";\nimport Navbar from \"./components/Navbar\";\nimport FilterBox from \"./components/FilterBox\";\nimport ImageTable from \"./components/ImageTable\";\nimport Pagination from \"./components/Pagination\";\n\nclass App extends Component {\n  state = {\n    imageData: sourceData,\n    pageStart: 0,\n    pageLast: 9,\n    currentPage: sourceData.slice(0, 9),\n    categories: [\"sports\", \"nature\", \"cars\"],\n    filters: {\n      sports: true,\n      nature: true,\n      cars: true\n    }\n  };\n\n  genericOnChange(event) {\n    const { name, checked } = event.target;\n    let updatedFilter = [];\n    this.setState(\n      {\n        pageStart: 0,\n        pageLast: 9,\n        filters: Object.assign({}, this.state.filters, {\n          [name]: checked\n        })\n      },\n      () => {\n        const { filters } = this.state;\n        updatedFilter = Object.keys(filters)\n          .filter(function(key) {\n            return filters[key];\n          })\n          .map(String);\n        this.setState(\n          {\n            categories: updatedFilter\n          },\n          () => {\n            const { categories } = this.state;\n            const selection = sourceData.filter(oneContact => {\n              return categories.includes(oneContact.category);\n            });\n\n            this.setState(\n              {\n                imageData: selection\n              },\n              () => {\n                const { imageData } = this.state;\n                const page = imageData.slice(0, 9);\n                this.setState({\n                  currentPage: page\n                });\n              }\n            );\n          }\n        );\n      }\n    );\n  }\n\n  genericSwitch(event) {\n    const { name } = event.target;\n    const { filters } = this.state;\n    var updatedFilter = [];\n    Object.keys(filters).forEach(key => {\n      if (filters[key]) filters[key] = false;\n    });\n    this.setState(\n      {\n        pageStart: 0,\n        pageLast: 9,\n        filters: Object.assign({}, this.state.filters, {\n          [name]: true\n        })\n      },\n      () => {\n        const { filters } = this.state;\n\n        updatedFilter = Object.keys(filters)\n          .filter(function(key) {\n            return filters[key];\n          })\n          .map(String);\n        this.setState(\n          {\n            categories: updatedFilter\n          },\n          () => {\n            const { categories } = this.state;\n            const selection = sourceData.filter(oneContact => {\n              return categories.includes(oneContact.category);\n            });\n            this.setState(\n              {\n                imageData: selection\n              },\n              () => {\n                const { imageData } = this.state;\n                const page = imageData.slice(0, 9);\n                this.setState({\n                  currentPage: page\n                });\n              }\n            );\n          }\n        );\n      }\n    );\n  }\n\n  genericImageSelector(pageStartIndex, pageLastIndex) {\n    const { imageData } = this.state;\n    this.setState({\n      pageStart: pageStartIndex,\n      pageLast: pageLastIndex,\n      currentPage: imageData.slice(pageLastIndex - 9, pageLastIndex)\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar onLink={event => this.genericSwitch(event)} />\n        <FilterBox\n          filters={this.state.filters}\n          onBox={event => this.genericOnChange(event)}\n        />\n        <ImageTable imageData={this.state.currentPage} />\n        <Pagination\n          products={(event, pageStartIndex, pageLastIndex) =>\n            this.genericImageSelector(event, pageStartIndex, pageLastIndex)\n          }\n          imageData={this.state.imageData}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}